// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Belt_List = require("bs-platform/lib/js/belt_List.js");
var Garter_List = require("./Garter_List.bs.js");
var Caml_js_exceptions = require("bs-platform/lib/js/caml_js_exceptions.js");

function isEmpty(param) {
  return Garter_List.isEmpty(param[0]);
}

function checkf(q) {
  if (q[0]) {
    return q;
  } else {
    return [
            Belt_List.reverse(q[1]),
            /* [] */0
          ];
  }
}

function snoc(param, x) {
  return checkf([
              param[0],
              {
                hd: x,
                tl: param[1]
              }
            ]);
}

function head(param) {
  var match = param[0];
  if (match) {
    return match.hd;
  }
  throw {
        RE_EXN_ID: "Not_found",
        Error: new Error()
      };
}

function tail(param) {
  var match = param[0];
  if (match) {
    return checkf([
                match.tl,
                param[1]
              ]);
  }
  throw {
        RE_EXN_ID: "Not_found",
        Error: new Error()
      };
}

function toList(q) {
  var f = function (q) {
    try {
      return {
              hd: head(q),
              tl: f(tail(q))
            };
    }
    catch (raw_exn){
      var exn = Caml_js_exceptions.internalToOCamlException(raw_exn);
      if (exn.RE_EXN_ID === "Not_found") {
        return /* [] */0;
      }
      throw exn;
    }
  };
  return f(q);
}

var empty = [
  /* [] */0,
  /* [] */0
];

exports.empty = empty;
exports.isEmpty = isEmpty;
exports.snoc = snoc;
exports.head = head;
exports.tail = tail;
exports.toList = toList;
/* No side effect */
