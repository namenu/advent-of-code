// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Jest = require("@glennsl/bs-jest/src/jest.bs.js");
var Year2020_Day01 = require("../src/Year2020/Year2020_Day01.bs.js");
var Year2020_Day02 = require("../src/Year2020/Year2020_Day02.bs.js");
var Year2020_Day09 = require("../src/Year2020/Year2020_Day09.bs.js");
var Year2020_Day14 = require("../src/Year2020/Year2020_Day14.bs.js");

Jest.describe("Expect", (function (param) {
        Jest.test("Year2020_Day01", (function (param) {
                if (Year2020_Day01.part1(Year2020_Day01.input) !== 436404) {
                  throw {
                        RE_EXN_ID: "Assert_failure",
                        _1: [
                          "vector_corpus.re",
                          8,
                          6
                        ],
                        Error: new Error()
                      };
                }
                if (Year2020_Day01.part1(Year2020_Day01.sampleInput) !== 514579) {
                  throw {
                        RE_EXN_ID: "Assert_failure",
                        _1: [
                          "vector_corpus.re",
                          9,
                          6
                        ],
                        Error: new Error()
                      };
                }
                if (Year2020_Day01.part2(Year2020_Day01.input) !== 274879808) {
                  throw {
                        RE_EXN_ID: "Assert_failure",
                        _1: [
                          "vector_corpus.re",
                          11,
                          6
                        ],
                        Error: new Error()
                      };
                }
                if (Year2020_Day01.part2(Year2020_Day01.sampleInput) !== 241861950) {
                  throw {
                        RE_EXN_ID: "Assert_failure",
                        _1: [
                          "vector_corpus.re",
                          12,
                          6
                        ],
                        Error: new Error()
                      };
                }
                return Jest.Expect.toBe(true, Jest.Expect.expect(true));
              }));
        Jest.test("Year2020_Day01", (function (param) {
                if (Year2020_Day01.part1(Year2020_Day01.input) !== 436404) {
                  throw {
                        RE_EXN_ID: "Assert_failure",
                        _1: [
                          "vector_corpus.re",
                          22,
                          6
                        ],
                        Error: new Error()
                      };
                }
                if (Year2020_Day01.part1(Year2020_Day01.sampleInput) !== 514579) {
                  throw {
                        RE_EXN_ID: "Assert_failure",
                        _1: [
                          "vector_corpus.re",
                          23,
                          6
                        ],
                        Error: new Error()
                      };
                }
                if (Year2020_Day01.part2(Year2020_Day01.input) !== 274879808) {
                  throw {
                        RE_EXN_ID: "Assert_failure",
                        _1: [
                          "vector_corpus.re",
                          25,
                          6
                        ],
                        Error: new Error()
                      };
                }
                if (Year2020_Day01.part2(Year2020_Day01.sampleInput) !== 241861950) {
                  throw {
                        RE_EXN_ID: "Assert_failure",
                        _1: [
                          "vector_corpus.re",
                          26,
                          6
                        ],
                        Error: new Error()
                      };
                }
                return Jest.Expect.toBe(true, Jest.Expect.expect(true));
              }));
        Jest.test("Year2020_Day02", (function (param) {
                if (Year2020_Day02.part2(Year2020_Day02.sampleInput) !== 1) {
                  throw {
                        RE_EXN_ID: "Assert_failure",
                        _1: [
                          "vector_corpus.re",
                          36,
                          6
                        ],
                        Error: new Error()
                      };
                }
                if (Year2020_Day02.part2(Year2020_Day02.input) !== 588) {
                  throw {
                        RE_EXN_ID: "Assert_failure",
                        _1: [
                          "vector_corpus.re",
                          37,
                          6
                        ],
                        Error: new Error()
                      };
                }
                return Jest.Expect.toBe(true, Jest.Expect.expect(true));
              }));
        Jest.test("Year2020_Day09", (function (param) {
                if (Year2020_Day09.part2(Year2020_Day09.sampleInput, 127.0) !== 62.0) {
                  throw {
                        RE_EXN_ID: "Assert_failure",
                        _1: [
                          "vector_corpus.re",
                          47,
                          6
                        ],
                        Error: new Error()
                      };
                }
                if (Year2020_Day09.part2(Year2020_Day09.input, 144381670.0) !== 20532569.0) {
                  throw {
                        RE_EXN_ID: "Assert_failure",
                        _1: [
                          "vector_corpus.re",
                          48,
                          6
                        ],
                        Error: new Error()
                      };
                }
                return Jest.Expect.toBe(true, Jest.Expect.expect(true));
              }));
        return Jest.test("Year2020_Day14", (function (param) {
                      if (Year2020_Day14.part1(Year2020_Day14.sampleInput) !== 165.0) {
                        throw {
                              RE_EXN_ID: "Assert_failure",
                              _1: [
                                "vector_corpus.re",
                                57,
                                6
                              ],
                              Error: new Error()
                            };
                      }
                      if (Year2020_Day14.part1(Year2020_Day14.input) !== 17765746710228.0) {
                        throw {
                              RE_EXN_ID: "Assert_failure",
                              _1: [
                                "vector_corpus.re",
                                58,
                                6
                              ],
                              Error: new Error()
                            };
                      }
                      return Jest.Expect.toBe(true, Jest.Expect.expect(true));
                    }));
      }));

/*  Not a pure module */
